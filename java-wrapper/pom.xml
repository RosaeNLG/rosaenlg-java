<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.rosaenlg</groupId>
    <artifactId>rosaenlg-java-parent</artifactId>
    <version>${revision}</version>
  </parent>

  <!-- coordinates -->
  <groupId>org.rosaenlg</groupId>
  <artifactId>java-wrapper</artifactId>
  <!--version>${revision}</version-->
  <!-- don't use ${rosaenlg.version} here as maven warns about it -->

  <packaging>jar</packaging>

  <!-- for central repo -->
  <description>Java wrapper around RosaeNLG (JavaScript Natural Language Generation library), using GraalVM</description>

  <properties>
    <compiler.dir>${project.build.directory}/compiler</compiler.dir>
    <license.dir>${basedir}</license.dir>
    <jslib.outputdir>${project.basedir}/src/main/resources/</jslib.outputdir>
  </properties>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <profiles>
    <profile>
      <id>jdk15</id>
      <activation>
        <jdk>[11,</jdk>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.graalvm.sdk</groupId>
          <artifactId>graal-sdk</artifactId>
          <version>${graalvm.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>org.graalvm.js</groupId>
          <artifactId>js</artifactId>
          <version>${graalvm.version}</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.graalvm.js</groupId>
          <artifactId>js-scriptengine</artifactId>
          <version>${graalvm.version}</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.graalvm.tools</groupId>
          <artifactId>profiler</artifactId>
          <version>${graalvm.version}</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>org.graalvm.tools</groupId>
          <artifactId>chromeinspector</artifactId>
          <version>${graalvm.version}</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.22.1</version>
            <configuration>
              <argLine>-XX:+UnlockExperimentalVMOptions --module-path=${compiler.dir} --upgrade-module-path=${compiler.dir}/compiler.jar</argLine>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.10</version>
            <executions>
              <execution>
                <id>copy</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.graalvm.compiler</groupId>
                      <artifactId>compiler</artifactId>
                      <version>${graalvm.version}</version>
                      <type>jar</type>
                      <overWrite>true</overWrite>
                      <destFileName>compiler.jar</destFileName>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.graalvm.truffle</groupId>
                      <artifactId>truffle-api</artifactId>
                      <version>${graalvm.version}</version>
                      <type>jar</type>
                      <overWrite>true</overWrite>
                      <destFileName>truffle-api.jar</destFileName>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.graalvm.sdk</groupId>
                      <artifactId>graal-sdk</artifactId>
                      <version>${graalvm.version}</version>
                      <type>jar</type>
                      <overWrite>true</overWrite>
                      <destFileName>graal-sdk.jar</destFileName>
                    </artifactItem>
                  </artifactItems>
                  <outputDirectory>${compiler.dir}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <id>default-cli</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <arguments>
                    <argument>--module-path</argument>
                    <!-- automatically creates the modulepath using all project dependencies, also adding the project build directory -->
                    <modulepath />
                    <argument>-classpath</argument>
                    <!-- automatically creates the classpath using all project dependencies, also adding the project build directory -->
                    <classpath />
                    <!--argument>-XX:+UnlockExperimentalVMOptions</argument-->
                    <!--argument>-XX:+EnableJVMCI</argument-->
                    <argument>--upgrade-module-path=${compiler.dir}/compiler.jar</argument>
                    <argument>org.rosaenlg.lib.App</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>nograal</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <arguments>
                    <argument>--module-path</argument>
                    <!-- automatically creates the modulepath using all project dependencies, also adding the project build directory -->
                    <modulepath />
                    <argument>-classpath</argument>
                    <!-- automatically creates the classpath using all project dependencies, also adding the project build directory -->
                    <classpath />
                    <argument>org.rosaenlg.lib.App</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <executable>${JAVA_HOME}/bin/java</executable>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <plugins>
      <!-- clean before download -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/resources</directory>
              <includes>
                <include>rosaenlg_tiny_*_comp.js</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!-- download all js automatically -->
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>1.4.2</version>
        <executions>
          <execution>
            <id>download-rosaenlgjs-fr_FR_comp</id>
            <phase>validate</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://unpkg.com/rosaenlg@${rosaenlg.version}/dist/rollup/rosaenlg_tiny_fr_FR_${rosaenlg.version}_comp.js</url>
              <outputDirectory>${jslib.outputdir}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>download-rosaenlgjs-en_US_comp</id>
            <phase>validate</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://unpkg.com/rosaenlg@${rosaenlg.version}/dist/rollup/rosaenlg_tiny_en_US_${rosaenlg.version}_comp.js</url>
              <outputDirectory>${jslib.outputdir}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>download-rosaenlgjs-de_DE_comp</id>
            <phase>validate</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://unpkg.com/rosaenlg@${rosaenlg.version}/dist/rollup/rosaenlg_tiny_de_DE_${rosaenlg.version}_comp.js</url>
              <outputDirectory>${jslib.outputdir}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>download-rosaenlgjs-it_IT_comp</id>
            <phase>validate</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://unpkg.com/rosaenlg@${rosaenlg.version}/dist/rollup/rosaenlg_tiny_it_IT_${rosaenlg.version}_comp.js</url>
              <outputDirectory>${jslib.outputdir}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>download-rosaenlgjs-es_ES_comp</id>
            <phase>validate</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://unpkg.com/rosaenlg@${rosaenlg.version}/dist/rollup/rosaenlg_tiny_es_ES_${rosaenlg.version}_comp.js</url>
              <outputDirectory>${jslib.outputdir}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>download-rosaenlgjs-OTHER_comp</id>
            <phase>validate</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://unpkg.com/rosaenlg@${rosaenlg.version}/dist/rollup/rosaenlg_tiny_OTHER_${rosaenlg.version}_comp.js</url>
              <outputDirectory>${jslib.outputdir}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- add license to files, one shot -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>2.0.0</version>
        <configuration>
          <licenseName>apache_v2</licenseName>
          <header>${license.dir}/LICENSE</header>
          <excludes>
            <exclude>**/rosaenlg_*_comp.js</exclude>
            <exclude>**/jsonPackage.schema.json</exclude>
          </excludes>
          <encoding>utf-8</encoding>
        </configuration>
        <executions>
          <execution>
            <id>first</id>
            <goals>
              <goal>update-file-header</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <!-- Build an executable JAR -->
      <!--plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.1.0</version>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <classpathPrefix>lib/</classpathPrefix>
                                    <mainClass>org.rosaenlg.lib.Cli</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin-->
      <!-- Build fat JAR with main -->
      <!--plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>org.rosaenlg.lib.Cli</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin-->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>js</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.1</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <arguments>
                <argument>--module-path</argument>
                <!-- automatically creates the modulepath using all project dependencies, also adding the project build directory -->
                <modulepath />
                <argument>-classpath</argument>
                <!-- automatically creates the classpath using all project dependencies, also adding the project build directory -->
                <classpath />
              </arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <executable>${JAVA_HOME}/bin/java</executable>
          <arguments>
            <argument>-classpath</argument>
            <!-- automatically creates the classpath using all project dependencies, also adding the project build directory -->
            <classpath />
            <argument>org.rosaenlg.lib.App</argument>
          </arguments>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <!-- json validation -->
    <!-- https://mvnrepository.com/artifact/org.everit.json/org.everit.json.schema -->
    <dependency>
      <groupId>org.everit.json</groupId>
      <artifactId>org.everit.json.schema</artifactId>
      <version>1.5.1</version>
    </dependency>
    <!-- logging stuff -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.13.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.13.3</version>
      <scope>test</scope>
    </dependency>
    <!-- junit -->
    <!--dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.2.0</version>
      <scope>test</scope>
    </dependency-->
  </dependencies>
</project>